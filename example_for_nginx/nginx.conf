map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name shoes.example.com;
    ssl_certificate /etc/nginx/ssl/shoes.example.com_2048/fullchain.cer;
    ssl_certificate_key /etc/nginx/ssl/shoes.example.com_2048/private.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;


    # 匹配/vv 或 /ss 。如果只需要匹配一个，可以写  location /vv
   location ~ ^/(vv|ss)$ {

      if ($http_upgrade != "websocket") {
            return 404;
        }

    # 确保 WebSocket 升级
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header Forwarded $proxy_add_forwarded;

    # 超时设置，可以不要
    proxy_connect_timeout 60s;
    proxy_read_timeout 60s;
    proxy_send_timeout 60s;
    # 如果你的nginx运行在docker中，转发到shoes docker 的5555端口（确保两个容器在同一个docker network下
    proxy_pass http://shoes:5555;
    # 如果你的nginx直接运行，可以按如下方式配置，注意shoes端口需映射到主机
    # proxy_pass http://127.0.0.1:5555;

    }
}
